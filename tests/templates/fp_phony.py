# -*- coding: utf-8 -*-
#
# Author:  Dominik Gresch <greschd@gmx.ch>
# Date:    15.10.2014 14:49:25 CEST
# File:    tb_hamilton.py

import sys
sys.path.insert(0, '../')
import z2pack

from common import *

import re
import platform
import types
import unittest


class FpPhonyTestCase(CommonTestCase):
    def __init__(self, *args, **kwargs):
        if(re.match('Windows', platform.platform(), re.IGNORECASE)):
            self._sep = '\\'
        else:
            self._sep = '/'
        self._res = (
            [0.0, 0.050000000000000003, 0.10000000000000001,
             0.15000000000000002,  0.20000000000000001, 0.25,
             0.30000000000000004,  0.35000000000000003, 0.40000000000000002,
             0.45000000000000001,  0.5],
            [[1.5171245830580981e-13, 0.15757835196859507,
              0.15757835196880779,  0.49999999999943018,
              0.49999999999996031,  0.50000000000004463,
              0.50000000000060951,  0.8424216480312039, 0.84242164803141295,
              0.99999999999982014],
             [1.5171245830580981e-13, 0.15757835196859507,
              0.15757835196880779,  0.49999999999943018,
              0.49999999999996031,  0.50000000000004463,
              0.50000000000060951,  0.8424216480312039,
              0.84242164803141295,  0.99999999999982014],
             [1.5171245830580981e-13, 0.15757835196859507,
              0.15757835196880779,  0.49999999999943018,
              0.49999999999996031,  0.50000000000004463,
              0.50000000000060951,  0.8424216480312039,
              0.84242164803141295,  0.99999999999982014],
             [1.5171245830580981e-13, 0.15757835196859507,
              0.15757835196880779,  0.49999999999943018,
              0.49999999999996031,  0.50000000000004463,
              0.50000000000060951,  0.8424216480312039,
              0.84242164803141295,  0.99999999999982014],
             [1.5171245830580981e-13, 0.15757835196859507,
              0.15757835196880779,  0.49999999999943018,
              0.49999999999996031,  0.50000000000004463,
              0.50000000000060951,  0.8424216480312039,
              0.84242164803141295,  0.99999999999982014],
             [1.5171245830580981e-13, 0.15757835196859507,
              0.15757835196880779,  0.49999999999943018,
              0.49999999999996031,  0.50000000000004463,
              0.50000000000060951,  0.8424216480312039,
              0.84242164803141295,  0.99999999999982014],
             [1.5171245830580981e-13, 0.15757835196859507,
              0.15757835196880779,  0.49999999999943018,
              0.49999999999996031,  0.50000000000004463,
              0.50000000000060951,  0.8424216480312039,
              0.84242164803141295,  0.99999999999982014],
             [1.5171245830580981e-13, 0.15757835196859507,
              0.15757835196880779,  0.49999999999943018,
              0.49999999999996031,  0.50000000000004463,
              0.50000000000060951,  0.8424216480312039,
              0.84242164803141295,  0.99999999999982014],
             [1.5171245830580981e-13, 0.15757835196859507,
              0.15757835196880779,  0.49999999999943018,
              0.49999999999996031,  0.50000000000004463,
              0.50000000000060951,  0.8424216480312039,
              0.84242164803141295,  0.99999999999982014],
             [1.5171245830580981e-13, 0.15757835196859507,
              0.15757835196880779,  0.49999999999943018,
              0.49999999999996031,  0.50000000000004463,
              0.50000000000060951,  0.8424216480312039,
              0.84242164803141295,  0.99999999999982014],
             [1.5171245830580981e-13, 0.15757835196859507,
              0.15757835196880779,  0.49999999999943018,
              0.49999999999996031,  0.50000000000004463,
              0.50000000000060951,  0.8424216480312039,
              0.84242164803141295,  0.99999999999982014]],
            [0.32878917598411894,  0.32878917598411894,
             0.32878917598411894,  0.32878917598411894,
             0.32878917598411894,  0.32878917598411894,
             0.32878917598411894,  0.32878917598411894,
             0.32878917598411894,  0.32878917598411894,
             0.32878917598411894])
        super(FpPhonyTestCase, self).__init__(*args, **kwargs)

    def testphony1(self):
        sys = z2pack.fp.System(
            'samples' + self._sep + 'wannier90.mmn',
            lambda x, y, z, N: '',
            "kpts",
            'samples' + self._sep + 'build',
            "")

        plane = sys.plane(2, 0, 0, use_pickle=False)

        plane.wcc_calc(no_iter=True, no_neighbour_check=True, verbose=False)
        self.assertContainerAlmostEqual(plane.get_res(), self._res)

    def testphony2(self):
        sys = z2pack.fp.System(
            'samples' + self._sep + 'varw90.mmn',
            lambda x, y, z, N: '',
            "kpts",
            'samples' + self._sep + 'build',
            "",
            file_names='wannier90.mmn')

        plane = sys.plane(2, 0, 0, use_pickle=False)

        plane.wcc_calc(no_iter=True, no_neighbour_check=True, verbose=False)
        self.assertContainerAlmostEqual(plane.get_res(), self._res)

    def testphony3(self):
        sys = z2pack.fp.System(
            'samples' + self._sep + 'varw90.mmn',
            lambda x, y, z, N: '',
            "kpts",
            'samples' + self._sep + 'build',
            "",
            mmn_path='varw90.mmn')

        plane = sys.plane(2, 0, 0, use_pickle=False)

        plane.wcc_calc(verbose=False)
        self.assertContainerAlmostEqual(plane.get_res(), self._res)


if __name__ == "__main__":
    unittest.main()
